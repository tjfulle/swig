#######################################################################
# Makefile for Fortran test-suite
#######################################################################

LANGUAGE	= fortran
FC      	= @FC@
SCRIPTSUFFIX= _runme.f90

FORTRAN_SO = @FORTRAN_SO@
FCFLAGS = @FCFLAGS@
CCSHARED=	@CCSHARED@

srcdir         = @srcdir@
top_srcdir     = @top_srcdir@
top_builddir   = @top_builddir@

CPP_TEST_CASES = \
	fortran_bindc

CPP11_TEST_CASES = \
	fortran_shared_ptr

C_TEST_CASES = \
	fortran_array_typemap \
	fortran_bindc_c \
	fortran_bindc_all \
	fortran_enums \

# C++11 tests: wrapper error
FAILING_CPP_TESTS += \
  cpp11_lambda_functions \
  cpp11_rvalue_reference2 \
  cpp11_rvalue_reference3 \
  cpp11_template_explicit

# C++11 tests: link error
FAILING_CPP_TESTS += \
  cpp11_default_delete

# C++11 tests: fortran error
FAILING_CPP_TESTS += \
  cpp11_strongly_typed_enumerations

# Private 'operator new' causes build error since it's not detected by the type
# traits
ifneq (,$(HAVE_CXX11_COMPILER))
FAILING_CPP_TESTS += private_assign
endif

# Failed to compile fortran
FAILING_CPP_TESTS += \
  abstract_signature \
  arrays \
  contract \
  director_classes \
  director_default \
  director_detect \
  director_keywords \
  director_overload2 \
  enum_scope_template \
  enum_thorough \
  extend_default \
  fvirtual \
  inherit_target_language \
  li_attribute \
  li_boost_shared_ptr \
  multiple_inheritance \
  multiple_inheritance_abstract \
  multiple_inheritance_interfaces \
  multiple_inheritance_nspace \
  multiple_inheritance_shared_ptr \
  namespace_class \
  nested_scope \
  nested_workaround \
  overload_arrays \
  overload_complicated \
  overload_method \
  overload_return_type \
  overload_simple \
  overload_subtype \
  refcount \
  smart_pointer_template_defaults_overload \
  template_extend_overload \
  template_methods \
  template_typedef_inherit \
  using_composition \
  using_extend \
  using_inherit \
  variable_replacement \
  virtual_poly

# failed to compile fortran
FAILING_C_TESTS += \
  preproc

include $(srcdir)/../common.mk

# Rules for the different types of tests
%.cpptest:
	$(setup)
	+$(swig_and_compile_cpp)
	$(run_testcase)

%.ctest:
	$(setup)
	+$(swig_and_compile_c)
	$(run_testcase)

%.multicpptest:
	$(setup)
	@echo "*** Fortran multi tests are disabled; skipping '$*'"

# Runs the testcase.
run_testcase = \
	if [ -f $(SCRIPTDIR)/$(SCRIPTPREFIX)$*$(SCRIPTSUFFIX) ]; then \
	$(COMPILETOOL) $(FC) $(FCFLAGS) $(CCSHARED) $(SCRIPTDIR)/$(SCRIPTPREFIX)$*$(SCRIPTSUFFIX) -c; \
	$(COMPILETOOL) $(FC) $(FCFLAGS) $(CCSHARED) -o $*_runme.exe $(SCRIPTPREFIX)$*_runme.@OBJEXT@ $(LIBPREFIX)$*$(FORTRAN_SO); \
	env LD_LIBRARY_PATH=.:$$LD_LIBRARY_PATH $(RUNTOOL) ./$*_runme.exe; \
	fi

%.clean:
	@rm -f $*.o $*.a $*_runme.exe
	@rm -rf $*.dSYM
	find . -name $*.f90 -and -not -name $*_runme.f90 -exec rm {} \;
clean:
	$(MAKE) -f $(top_builddir)/$(EXAMPLES)/Makefile SRCDIR='$(SRCDIR)' fortran_clean
